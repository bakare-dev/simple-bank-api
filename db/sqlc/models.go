// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"database/sql"
	"fmt"
	"time"
)

type AccountType string

const (
	AccountTypeSavings  AccountType = "Savings"
	AccountTypeChecking AccountType = "Checking"
)

func (e *AccountType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = AccountType(s)
	case string:
		*e = AccountType(s)
	default:
		return fmt.Errorf("unsupported scan type for AccountType: %T", src)
	}
	return nil
}

type TransactionStatus string

const (
	TransactionStatusProcessing TransactionStatus = "Processing"
	TransactionStatusSuccessful TransactionStatus = "Successful"
	TransactionStatusFailed     TransactionStatus = "Failed"
)

func (e *TransactionStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = TransactionStatus(s)
	case string:
		*e = TransactionStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for TransactionStatus: %T", src)
	}
	return nil
}

type TransactionType string

const (
	TransactionTypeDebit  TransactionType = "Debit"
	TransactionTypeCredit TransactionType = "Credit"
)

func (e *TransactionType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = TransactionType(s)
	case string:
		*e = TransactionType(s)
	default:
		return fmt.Errorf("unsupported scan type for TransactionType: %T", src)
	}
	return nil
}

type Account struct {
	ID            int64       `json:"id"`
	UserID        int64       `json:"user_id"`
	AccountNumber string      `json:"account_number"`
	Type          AccountType `json:"type"`
	Pin           string      `json:"pin"`
	CreatedAt     time.Time   `json:"created_at"`
	UpdatedAt     time.Time   `json:"updated_at"`
}

type Transaction struct {
	ID              int64             `json:"id"`
	AccountID       int64             `json:"account_id"`
	Type            TransactionType   `json:"type"`
	Status          TransactionStatus `json:"status"`
	Amount          string            `json:"amount"`
	Description     sql.NullString    `json:"description"`
	TransactionDate time.Time         `json:"transaction_date"`
}

type User struct {
	ID          int64          `json:"id"`
	Name        string         `json:"name"`
	Email       string         `json:"email"`
	Password    string         `json:"password"`
	PhoneNumber sql.NullString `json:"phone_number"`
	CreatedAt   time.Time      `json:"created_at"`
	UpdatedAt   time.Time      `json:"updated_at"`
}
